#BlueJ class context
comment0.target=Rational
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Rational\ here.\r\n\r\n\ @author\ Johnnie\ Meredith\r\n\ @version\ 1.0\ setpember\ 20\ 2018\ 1125am\r\n
comment1.params=
comment1.target=Rational()
comment1.text=\r\n\ Constructor\ objects\ of\ class\ Rational\r\n\ First\ takes\ two\ integers\ as\ arguments\r\n\ Second\ allows\ setting\ of\ numerator\ and\ denominator\ via\ methods\r\n
comment10.params=numer\ denom
comment10.target=Rational\ reduce(int,\ int)
comment11.params=
comment11.target=Rational\ reduce()
comment12.params=r
comment12.target=double\ toDouble(Rational)
comment12.text=\r\n\ TODOUBLE\ methods\ overloaded\r\n\ First\ takes\ a\ rational\ as\ a\ parameter\ and\ returns\ it\ as\ a\ double\r\n\ Second\ takes\ two\ integers(numerator\ and\ denominator)\ and\ returns\ their\ quotient\r\n\ Third\ allows\ you\ to\ return\ the\ double\ value\ of\ a\ Rational\ object\ itself\r\n
comment13.params=numerator\ denominator
comment13.target=double\ toDouble(int,\ int)
comment14.params=
comment14.target=double\ toDouble()
comment15.params=r
comment15.target=java.lang.String\ toString(Rational)
comment15.text=\r\n\ TOSTRING\ methods\ overloaded\r\n\ First\ takes\ a\ Rational\ as\ a\ parameter\ and\ returns\ it\ as\ a\ String\r\n\ Second\ takes\ two\ integers(numerator\ and\ denominator)\ and\ returns\ it\ as\ a\ String\r\n\ Third\ converts\ a\ Rational\ object\ itself\ to\ a\ String\r\n
comment16.params=numerator\ denominator
comment16.target=java.lang.String\ toString(int,\ int)
comment17.params=
comment17.target=java.lang.String\ toString()
comment18.params=r
comment18.target=void\ printRational(Rational)
comment18.text=\r\n\ PRINTRATIONAL\ overloaded\r\n\ Takes\ a\ Rational\ object\ as\ a\ parameter\ and\ prints\ it\ to\ console\ by\ converting\ it\ to\ a\ String\r\n\ First\ takes\ a\ Rational\ as\ a\ parameter\ and\ outputs\ it\ to\ console\ by\ coverting\ it\ to\ a\ String\ an\ printing\ it\r\n\ Second\ prints\ the\ current\ Rational\ object\ by\ converting\ to\ a\ String\ and\ printing\ it\r\n
comment19.params=
comment19.target=void\ printRational()
comment2.params=numerator\ denominator
comment2.target=Rational(int,\ int)
comment20.params=r
comment20.target=Rational\ negate(Rational)
comment20.text=\r\n\ NEGATE\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment21.params=numerator\ denominator
comment21.target=Rational\ negate(int,\ int)
comment22.params=
comment22.target=Rational\ negate()
comment23.params=numerator\ denominator
comment23.target=Rational\ invert(int,\ int)
comment23.text=\r\n\ INVERT\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment24.params=r
comment24.target=Rational\ invert(Rational)
comment25.params=
comment25.target=Rational\ invert()
comment26.params=rTemp
comment26.target=int\ greatestCommonDivisor(Rational)
comment26.text=\r\n\ GREATESTCOMMONDIVISOR\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment27.params=numerator\ denominator
comment27.target=int\ greatestCommonDivisor(int,\ int)
comment28.params=
comment28.target=int\ greatestCommonDivisor()
comment29.params=r\ p
comment29.target=Rational\ multiply(Rational,\ Rational)
comment29.text=\r\n\ MULTIPLY\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment3.params=
comment3.target=int\ getNumerator()
comment3.text=\r\n\ GET\ and\ SET\ methods\r\n
comment30.params=num1\ denom1\ num2\ denom2
comment30.target=Rational\ multiply(int,\ int,\ int,\ int)
comment31.params=r
comment31.target=Rational\ multiply(Rational)
comment32.params=r\ p
comment32.target=Rational\ divide(Rational,\ Rational)
comment32.text=\r\n\ DIVIDE\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment33.params=num1\ denom1\ num2\ denom2
comment33.target=Rational\ divide(int,\ int,\ int,\ int)
comment34.params=r
comment34.target=Rational\ divide(Rational)
comment35.params=r\ p
comment35.target=Rational\ add(Rational,\ Rational)
comment35.text=\r\n\ ADD\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment36.params=num1\ denom1\ num2\ denom2
comment36.target=Rational\ add(int,\ int,\ int,\ int)
comment37.params=r
comment37.target=Rational\ add(Rational)
comment38.params=r\ p
comment38.target=Rational\ subtract(Rational,\ Rational)
comment38.text=\r\n\ SUBTRACT\ method\ overloaded\r\n\ First\ takes\r\n\ Second\ takes\r\n\ Third\ acts\ on\ a\ Rational\ object\ itself\r\n
comment39.params=num1\ denom1\ num2\ denom2
comment39.target=Rational\ subtract(int,\ int,\ int,\ int)
comment4.params=
comment4.target=int\ getDenominator()
comment40.params=r
comment40.target=Rational\ subtract(Rational)
comment41.params=r\ p
comment41.target=boolean\ equals(Rational,\ Rational)
comment41.text=\r\n\ EQUALS\ method\ overloaded\r\n\ First\ takes\ two\ rationals\ as\ paramaters\ and\ compares\ the\ second\ to\ the\ first\r\n\ Second\ takes\ a\ second\ Rational\ as\ a\ parameter\ and\ compares\ it\ to\ the\ current\ Rational\ object\ itself\r\n\ Both\ will\ return\ true\ if\ they\ are\ equal\ to\ each\ other\r\n
comment42.params=r
comment42.target=boolean\ equals(Rational)
comment43.params=args
comment43.target=void\ main(java.lang.String[])
comment5.params=n
comment5.target=void\ setNumerator(int)
comment6.params=
comment6.target=void\ setNumerator()
comment7.params=d
comment7.target=void\ setDenominator(int)
comment8.params=
comment8.target=void\ setDenominator()
comment9.params=r
comment9.target=Rational\ reduce(Rational)
comment9.text=\r\n\ REDUCE\ methods\ overloaded\r\n\ one\ static\ and\ two\ non-static\ implementations\ all\ with\ different\ passed\ parameters\r\n\ First\ takes\ a\ Rational\ as\ a\ parameter\r\n\ Second\ takes\ two\ integers\ as\ parameters\ for\ numerator\ and\ denominator\r\n\ Third\ allows\ you\ to\ act\ on\ the\ instance\ of\ the\ parameter\ itself\r\n
numComments=44
